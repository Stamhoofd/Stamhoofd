syntax = "proto3";
package be.stamhoofd.backend.member;
option go_package = "member/service";

import "protos/googleapis/google/rpc/status.proto";
import "protos/googleapis/google/type/Date.proto";

service Member {
  // Create a member with its and its managers details.
  rpc Create(CreateRequest) returns (CreateResponse) {}
  // Request a member by its ID.
  rpc Get(GetRequest) returns (GetResponse) {}
}

message Member {
  string id = 1;
  MemberDetails details = 2;
  MemberType type = 3;
  // A manager is a member who controls this account.
  repeated Member managers = 4;
}

message MemberDetails {
  // User ID from auth service. Empty string if not linked.
  string user_id = 1;
  string first_name = 2;
  string last_name = 3;
  Gender gender = 4;
  google.type.Date birthdate = 5;
  // Phone number, can be empty.
  string phone = 6;
  // Additional information like family situation.
  string additional_information = 7;
}

enum Gender {
  MALE = 0;
  FEMALE = 1;
  OTHER = 2;
}

enum MemberType {
  // This member manages itself, no parent does this.
  UNMANAGED = 0;
  // Another member like a parent manages this member.
  // In case this person is a minor for example.
  MANAGED = 1;
}

message CreateRequest {
  MemberDetails details = 1;
  repeated MemberDetails manager_details = 2;
}

message CreateResponse {
  google.rpc.Status status = 1;
  Member member = 2;
}

message GetRequest { string id = 1; }

message GetResponse {
  google.rpc.Status status = 1;
  Member member = 2;
}
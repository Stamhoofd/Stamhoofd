@use "../base/variables" as *;
@use "../base/text-styles" as *;


.split-view-controller {
    > .master {
        z-index: 100;
        overscroll-behavior: contain;
    }

    > .detail {
        background: var(--color-current-background);
    }

    &[data-has-detail="true"] {
        > .master {
            border-right: $border-width-thin solid $color-border;
            background: $color-background-shade;
            --color-current-background: #{$color-background-shade};
            --color-current-background-shade: #{$color-background-shade-darker};

            body.modern & {
                overflow: hidden;
            }
        }
    }
}

.popup {
    transform: translate3d(0, 0, 0);

    // Android fix / fix where position fixed is 100vh, and isn't the same as the viewport
    bottom: auto;
    height: 100vh;
    height: 100dvh;
    height: calc(var(--vh, 1vh) * 100);
    
    // Prevent scrolling outer areas when touching the overlay
    @supports not (overscroll-behavior: contain) {
        touch-action: none;
    }

    @media (max-height: 900px) {
        // Reduce navigation bar height if height is limited
        --navigation-bar-margin: 10px;
        //--navigation-bar-horizontal-padding: 10px;
    }

    @media (prefers-color-scheme: dark) {
        &:after {
            background: rgba(8, 8, 8, 0.7);
        }
    }

    --popup-padding-top-raw: var(--st-safe-area-top, 0px);
    --popup-padding-bottom-raw: max(var(--st-safe-area-bottom, 0px), var(--keyboard-height, 0px), var(--bottom-padding, 0px));
   
    // Padding visible below the popup (we'll set this to zero if the keyboard is open to save space)
    --popup-padding-top-outside: max(var(--st-safe-area-top, 0px), calc(40px * var(--keyboard-closed, 1)));
    --popup-padding-bottom-outside: calc(80px - var(--popup-padding-top-outside, 0px));

    @media (min-height: 1100px) {
        // Limit the total height of the popup to max(50vh, 1000px)
        --popup-padding-top-outside: max(var(--st-safe-area-top, 0px), calc(calc(50vh - 500px) * var(--keyboard-closed, 1)));
        --popup-padding-bottom-outside: calc(100vh - 1000px - var(--popup-padding-top-outside, 0px));
    }

    @media (max-height: 900px) {
        // 20px on top, 0 bottom, unless the keyboard is open (then reverse)
        --popup-padding-top-outside: max(var(--st-safe-area-top, 0px), calc(20px * var(--keyboard-closed, 1)));
        --popup-padding-bottom-outside: calc(20px - var(--popup-padding-top-outside, 0px));
    }

    @media (max-height: 600px) {
        --popup-padding-top-outside: 5px;
        --popup-padding-bottom-outside: 0px;
    }

    display: block;

    &.fade-enter,
    &.fade-leave-to {
        &>div {
            transform: translate(-50%, 50vh);
        }
    }

    &.push-down {
        &>div {
            transform: translate3d(-50%, calc(var(--popup-padding-top-outside, 0px) - 10px), 0) scale(0.95, 0.95);
        }
    }

    &.push-down-full {
        &>div {
            transform: translate3d(-50%, calc(var(--popup-padding-top-outside, 0px) - 15px), 0) scale(0.9, 0.9);
        }
    }

    & > div {
        --popup-padding-top-inside: max(0px, calc(var(--popup-padding-top-raw, 0px) - var(--popup-padding-top-outside, 0px))); //calc(max(var(--popup-padding-top-outside), var(--popup-padding-top-raw, 0px)) - var(--popup-padding-top-raw, 0px));
        --popup-padding-bottom-inside: max(0px, calc(var(--popup-padding-bottom-raw, 0px) - var(--popup-padding-bottom-outside, 0px))); //calc(max(var(--popup-padding-bottom-outside), var(--popup-padding-bottom-raw, 0px)) - var(--popup-padding-bottom-raw, 0px));

        position: absolute;
        left: 50%;
        top: 0;
        width: 100%;
        max-width: 800px;
        transform: translate(-50%, var(--popup-padding-top-outside, 0px));

        touch-action: auto;
        background: $color-background;
        border-radius: $border-radius-modals;
        overscroll-behavior: contain;
        box-shadow: 0px 10px 60px 0px $color-overlay-shadow, 0px 15px 30px 0px $color-overlay-shadow;

        @media (prefers-color-scheme: dark) {
            box-shadow: 0 0 0 1px $color-border, 0px 10px 60px 0px $color-overlay-shadow, 0px 15px 30px 0px $color-overlay-shadow;
        }

        @media (max-height: 900px) {
            border-bottom-left-radius: 0px;
            border-bottom-right-radius: 0px;
        }

        --popup-height: calc(var(--vh, 1vh) * 100 - var(--popup-padding-top-outside, 0px) - var(--popup-padding-bottom-outside, 0px));
        height: var(--popup-height);

        > .scrollable-container {
            --vh: calc(var(--popup-height, 0px) / 100);
            --keyboard-height: 0px;
            --bottom-padding: 0px;
            --st-safe-area-bottom: var(--popup-padding-bottom-inside, 0px);
            --st-safe-area-top: var(--popup-padding-top-inside, 0px);

            body.modern & {
                overflow: hidden;
            }
        }
    }
}

.sheet {
    transform: translate3d(0, 0, 0);

    // Prevent scrolling outer areas when touching the overlay
    @supports not (overscroll-behavior: contain) {
        touch-action: none;
    }

    @media (prefers-color-scheme: dark) {
        &:after {
            background: rgba(8, 8, 8, 0.7);
        }
    }

    --popup-padding-top-outside: var(--st-safe-area-top, 0px);
    --popup-padding-bottom-outside: max(var(--st-safe-area-bottom, 0px), var(--keyboard-height, 0px), var(--bottom-padding, 0px));

    padding-bottom: var(--popup-padding-bottom-outside, 0px);
    padding-top: var(--popup-padding-top-outside, 0px);


    &.fade-enter,
    &.fade-leave-to {
        &>div {
            transform: translate(-50%, 30vh);
        }
    }

    > div {
        position: absolute;
        left: 50%;
        top: 50%;
        transform: translate(-50%, -50%) translate(0, calc(var(--popup-padding-top-outside, 0px) / 2 - var(--popup-padding-bottom-outside, 0px) / 2));

        touch-action: auto;
        background: $color-background;
        border-radius: $border-radius-modals;
        width: 400px;
        overscroll-behavior: contain;
        box-shadow: 0px 10px 60px 0px $color-overlay-shadow, 0px 15px 30px 0px $color-overlay-shadow;
        
        --st-safe-area-bottom: 0px;
        --keyboard-height: 0px;
        --bottom-padding: 0px;

        @media (prefers-color-scheme: dark) {
            box-shadow: 0 0 0 1px $color-border, 0px 10px 60px 0px $color-overlay-shadow, 0px 15px 30px 0px $color-overlay-shadow;
        }

        body.modern & {
            overflow: hidden;
        }

        //max-height: calc(min(max(50vh, 1000px), var(--vh, 1vh) * 100 - 40px));

        --popup-height: calc(min(max(50vh, 1000px), var(--vh, 1vh) * 100) - var(--popup-padding-top-outside, 0px) - var(--popup-padding-bottom-outside, 0px));
        max-height: var(--popup-height);
        transition: transform 0.3s, opacity 0.3s, max-height 0.3s;
        will-change: transform, opacity, max-height;

        > * {
            --vh: calc(var(--popup-height, 0px) / 100);
        }

        /*@media (max-height: 900px) {
            max-height: calc(min(max(50vh, 1000px), var(--vh, 1vh) * 100 - 20px));

            > * {
                --vh: calc(min(max(50vh, 1000px), var(--saved-vh, 1vh) * 100 - 20px) / 100);
            }
        }

        @media (max-height: 600px) {
            max-height: calc(min(max(50vh, 1000px), var(--vh, 1vh) * 100 - 0px));

            > * {
                --vh: calc(min(max(50vh, 1000px), var(--saved-vh, 1vh) * 100) / 100);
            }
        }*/
    }

    @media (max-height: 900px) {
        // Reduce navigation bar height if height is limited
        --navigation-bar-margin: 10px;
        //--navigation-bar-horizontal-padding: 10px;
    }
}

.side-view {
    transform: translate3d(0, 0, 0);

    @media (prefers-color-scheme: dark) {
        background: rgba(8, 8, 8, 0.7);
    }

    & > div {
        max-width: 400px;
        overscroll-behavior: contain;

        @media (prefers-color-scheme: dark) {
            box-shadow: 0 0 0 1px $color-border;
        }
    }
}
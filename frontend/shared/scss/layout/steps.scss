@use '../base/variables' as *;

$header-height: 50px;

.steps-layout {
    background: $color-white-shade;

    @media (max-width: 800px + 50px*2) {
        background: $color-white;
    }

	> header {
        
        
        > div {
            position: fixed;
            left: 0;
            top: 0;
            right: 0;
            height: $header-height - 20px;
            display: flex;
            flex-direction: row;
            padding: 10px 15px;
            z-index: 1000;

            background: $color-white-shade;

            @media (max-width: 800px + 50px*2) {
                background: $color-white;
            }

            &::before {
                content: '';
                left: 0;
                right: 0;
                top: $header-height;
                height: 50px;
                background: linear-gradient($color-white-shade, rgba($color-white-shade, 0));
                opacity: 0;
                pointer-events: none;
                transition: opacity 0.4s;
                position: absolute;

                @media (max-width: 800px + 50px*2) {
                    background: linear-gradient($color-white, rgba($color-white, 0));
                }
            }
            
            >.progress {
                position: absolute;
                left: 0;
                top: 0;
                height: $border-width;
                pointer-events: none;
                background: $color-primary;
                border-top-right-radius: $border-width/2;
                border-bottom-right-radius: $border-width/2;
                width: 0;
                opacity: 1;
                transition: width 0.3s, opacity 0.3s;

                &.hide {
                    transition: width 0.3s, opacity 0.2s 0.3s;
                    opacity: 0;
                }
            }

            >.left {
                flex-grow: 1;
                flex-basis: 0;
                flex-shrink: 10;
                text-align: left;

                display: flex;
                align-items: center;
                justify-content: flex-start;
            }

            >.right {
                flex-grow: 1;
                flex-basis: 0;
                flex-shrink: 10;

                display: flex;
                align-items: center;
                justify-content: flex-end;
            }

            >.center {
                padding: 10px;
                flex-basis: 0;
                flex-shrink: 0;
                text-overflow: ellipsis;
                white-space: nowrap;
                display: flex;
                align-items: center;
                justify-content: center;
            }
        }

        &[data-scrolled="true"] {
            &> div {
                &::before {
                    opacity: 1;
                }
            }
        }
	}

	&> main {
        overflow: hidden;

        // Div is used for animations
        &> div {
            display: flex;
            align-items: center;
            justify-content: center;
            min-height: 100vh;
            padding-top: $header-height;
            box-sizing: border-box;

            &> article {
                box-sizing: content-box;
                flex-basis: 800px;
                padding: 50px;
                background: $color-white;
                border-radius: $border-radius;
    
                @media (max-width: 800px + 50px*2) {
                    border-radius: 0;
                }
    
                @media (max-width: 500px) {
                    padding: 30px 20px;
                }
            }
        }
        
       

        // During animation, the incoming frame is rendered fixed
        .right-to-left-enter {
            transform: translateX(50%);
            opacity: 0;
        }
        .right-to-left-leave-to {
            transform: translateX(-50%);
            opacity: 0;
        }

        .right-to-left-enter-active {
            position: fixed;
            left: 0;
            right: 0;
            top: 0;
        }
    
        .right-to-left-enter-active, .right-to-left-leave-active {
            transition: transform 0.3s, opacity 0.3s;
        }
    
        .right-to-left-enter-to, .right-to-left-leave /* .fade-leave-active below version 2.1.8 */ {
            transform: translateX(0);
            opacity: 1;
        }

        // During animation, the incoming frame is rendered fixed
        .left-to-right-enter {
            transform: translateX(-50%);
            opacity: 0;
        }
        .left-to-right-leave-to {
            transform: translateX(50%);
            opacity: 0;
        }

        .left-to-right-enter-active {
            position: fixed;
            left: 0;
            right: 0;
            top: 0;
        }
    
        .left-to-right-enter-active, .left-to-right-leave-active {
            transition: transform 0.3s, opacity 0.3s;
        }
    
        .left-to-right-enter-to, .left-to-right-leave /* .fade-leave-active below version 2.1.8 */ {
            transform: translateX(0);
            opacity: 1;
        }
	}
}

.steps-layout {
    .move-enter {
        transform: translateX(-50%);
        opacity: 0;
    }
    .move-leave-to {
        transform: translateX(50%);
        opacity: 0;
    }

    .move-enter-active, .move-leave-active {
        transition: transform 0.2s, opacity 0.2s;
    }

    .move-enter-to, .move-leave /* .fade-leave-active below version 2.1.8 */ {
        transform: translateX(0);
        opacity: 1;
    }
}